CREATE DATABASE sgd;
USE sgd;
CREATE TABLE usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    contraseña VARCHAR(255) NOT NULL,
    rol ENUM('cliente', 'admin') NOT NULL DEFAULT 'cliente', 
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE grupos (
    id_grupo INT AUTO_INCREMENT PRIMARY KEY,
    nombre_grupo VARCHAR(100) NOT NULL
);
CREATE TABLE usuario_grupo (
    id_usuario INT,
    id_grupo INT,
    PRIMARY KEY (id_usuario, id_grupo),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE,
    FOREIGN KEY (id_grupo) REFERENCES grupos(id_grupo) ON DELETE CASCADE
);
CREATE TABLE carpetas (
    id_carpeta INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    id_carpeta_padre INT DEFAULT NULL,
    id_usuario INT,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_carpeta_padre) REFERENCES carpetas(id_carpeta) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE SET NULL
);
CREATE TABLE archivos (
    id_archivo INT AUTO_INCREMENT PRIMARY KEY,
    nombre_archivo VARCHAR(255) NOT NULL,
    id_carpeta INT,
    tipo_archivo VARCHAR(50),
    tamaño INT,
    ruta_archivo VARCHAR(500),
    fecha_subida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_usuario INT,
    FOREIGN KEY (id_carpeta) REFERENCES carpetas(id_carpeta) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE SET NULL
);
CREATE TABLE versiones_archivos (
    id_version INT AUTO_INCREMENT PRIMARY KEY,
    id_archivo INT,
    version INT NOT NULL,
    fecha_version TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    cambios TEXT,
    ruta_version VARCHAR(500),
    FOREIGN KEY (id_archivo) REFERENCES archivos(id_archivo) ON DELETE CASCADE 
);
CREATE TABLE permisos (
    id_permiso INT AUTO_INCREMENT PRIMARY KEY,
    id_archivo INT,
    id_usuario INT DEFAULT NULL,
    id_grupo INT DEFAULT NULL,
    permiso_lectura BOOLEAN DEFAULT FALSE,
    permiso_escritura BOOLEAN DEFAULT FALSE,
    permiso_eliminar BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (id_archivo) REFERENCES archivos(id_archivo) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE,
    FOREIGN KEY (id_grupo) REFERENCES grupos(id_grupo) ON DELETE CASCADE
);
CREATE TABLE etiquetas (
    id_etiqueta INT AUTO_INCREMENT PRIMARY KEY,
    nombre_etiqueta VARCHAR(100) NOT NULL
);
CREATE TABLE archivo_etiqueta (
    id_archivo INT,
    id_etiqueta INT,
    PRIMARY KEY (id_archivo, id_etiqueta),
    FOREIGN KEY (id_archivo) REFERENCES archivos(id_archivo) ON DELETE CASCADE,
    FOREIGN KEY (id_etiqueta) REFERENCES etiquetas(id_etiqueta) ON DELETE CASCADE
);
CREATE TABLE notificaciones (
    id_notificacion INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    id_archivo INT,
    mensaje VARCHAR(255),
    leido BOOLEAN DEFAULT FALSE,
    fecha_notificacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE,
    FOREIGN KEY (id_archivo) REFERENCES archivos(id_archivo) ON DELETE CASCADE
);
INSERT INTO usuarios (nombre, email, contraseña, rol)
VALUES 
('Admin1', 'admin1@admin.com', 'adminpassword', 'admin'),
('Cliente1', 'cliente1@cliente.com', 'clientpassword', 'cliente');


INSERT INTO permisos (id_archivo, id_usuario, permiso_lectura, permiso_escritura, permiso_eliminar)
VALUES 
(1, 1, TRUE, TRUE, TRUE);


INSERT INTO permisos (id_archivo, id_usuario, permiso_lectura)
VALUES 
(1, 2, TRUE);